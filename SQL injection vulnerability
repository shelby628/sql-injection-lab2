 SQL Injection Lab Report

Author: Shelby Adede  
Date: August 04, 2025  
Target: Web Application on Port 80  
Objective: Discover and exploit SQL Injection vulnerability



 1. Reconnaissance

Tool used: `nmap`  
Command: 

nmap -sC -sV [target-IP]


Result:
- Open port: 80/tcp
- Service: Apache httpd 2.4.38
- No known CVEs found for this version via Google search.



 2. Target Inspection

- Accessed the web application by entering the IP address into the browser.
- Observed a **login page**, a potential point of interest for SQL Injection.



3. Enumeration

Tool used: `Gobuster`  
- Installed `Go` and then `Gobuster`
- Ran directory brute-force enumeration to discover hidden directories or files.

Result:
- Enumeration did not reveal any additional useful paths or files.
- Common login bypass payloads also failed.



## ðŸ’¥ 4. SQL Injection Attempt

- Tried basic SQL injection payloads in the **username field** of the login form.
- Successful payload:  

admin'# 

- This bypassed authentication, confirming a **basic SQL Injection vulnerability**.


 âœ… Summary

| Step     | Tool Used    | Outcome                              |
|----------|--------------|--------------------------------------|
| Recon    | Nmap         | Found open port 80 and Apache 2.4.38 |
| Enum     | Gobuster     | No useful directories found          |
| Exploit  | Manual SQLi  | `admin'#` payload bypassed login     |



 ðŸ”’ Recommendations

- Sanitize all user input using prepared statements (parameterized queries).  
- Avoid directly concatenating SQL queries with user-supplied data.  
- Implement Web Application Firewalls (WAFs) and security headers.
